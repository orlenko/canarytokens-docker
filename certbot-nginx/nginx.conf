events { worker_connections 1024; }
http {
        server {
                client_max_body_size 50M;
                listen 80;
                server_name ___server_names___;

                sendfile on;
                gzip              on;
                gzip_http_version 1.0;
                gzip_proxied      any;
                gzip_min_length   500;
                gzip_disable      "MSIE [1-6]\.";
                gzip_types        text/plain text/xml text/css
                                text/comma-separated-values
                                text/javascript
                                application/x-javascript
                                application/atom+xml;

                default_type  application/octet-stream;
                include       /etc/nginx/mime.types;
		        server_tokens off;
        		location ^~ /.well-known/acme-challenge {
                                proxy_pass http://nginx:80;
                                proxy_set_header Host            $host;
                                proxy_set_header X-Forwarded-For $remote_addr;
                                proxy_set_header X-Forwarded-Proto https;
                        }

        	location = / {
                    proxy_pass         http://frontend:8082/;
                    proxy_redirect     off;
                    proxy_set_header   Host $host;
                    proxy_set_header   X-Real-IP $remote_addr;
                    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header   X-Forwarded-Host $server_name;
                }
                location ~* (/generate|/manage|/download|/history|/settings|/resources|/legal).* {
		    limit_except OPTIONS {
                	auth_basic         "Basic Auth Restricted Canrytokens";
			auth_basic_user_file /etc/nginx/.htpasswd;
		    }
		    add_header Access-Control-Allow-Origin $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,WWW-Authorization' always;
if ($request_method = 'OPTIONS') {

		    add_header Access-Control-Allow-Origin $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,WWW-Authorization' always;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
}
                    proxy_pass         http://frontend:8082;
                    proxy_redirect     off;
                    proxy_set_header   Host $host;
                    proxy_set_header   X-Real-IP $remote_addr;
                    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header   X-Forwarded-Host $server_name;
                }
                location = /robots.txt {
                    proxy_pass         http://frontend:8082/robots.txt;
                    proxy_redirect     off;
                    proxy_set_header   Host $host;
                    proxy_set_header   X-Real-IP $remote_addr;
                    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header   X-Forwarded-Host $server_name;
                }
                location ~ [.]* {
                    proxy_pass         http://switchboard:8083;
                    proxy_redirect     off;
                    proxy_set_header   Host $host;
                    proxy_set_header   X-Real-IP $remote_addr;
                    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header   X-Forwarded-Host $server_name;
                }

        }
}
